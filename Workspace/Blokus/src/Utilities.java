//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2012-12-02 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Thu 30-Oct-2008 14:59:38)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.jdk.*;
// ***** VDMTOOLS END Name=imports



public class Utilities implements EvaluatePP {


// ***** VDMTOOLS START Name=Pos KEEP=NO
  public static class Pos implements Record {

    public Integer x;

    public Integer y;


    public Pos () {}


    public Pos (Integer p1, Integer p2) {

      x = p1;
      y = p2;
    }


    public Object clone () {
      return new Pos(x, y);
    }


    public String toString () {
      return "mk_Utilities`Pos(" + UTIL.toString(x) + "," + UTIL.toString(y) + ")";
    }


    public boolean equals (Object obj) {
      if (!(obj instanceof Pos)) 
        return false;
      else {

        Pos temp = (Pos) obj;
        return UTIL.equals(x, temp.x) && UTIL.equals(y, temp.y);
      }
    }


    public int hashCode () {
      return (x == null ? 0 : x.hashCode()) + (y == null ? 0 : y.hashCode());
    }

  }
// ***** VDMTOOLS END Name=Pos
;

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=UtilitiesSentinel KEEP=NO
  class UtilitiesSentinel extends Sentinel {

    public final int nr_functions = 0;


    public UtilitiesSentinel () throws CGException {}


    public UtilitiesSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=UtilitiesSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new UtilitiesSentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel

// ***** VDMTOOLS START Name=boardSize KEEP=NO
  public static final Integer boardSize = new Integer(20);
// ***** VDMTOOLS END Name=boardSize


// ***** VDMTOOLS START Name=vdm_init_Utilities KEEP=NO
  private void vdm_init_Utilities () throws CGException {
    try {
      setSentinel();
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Utilities


// ***** VDMTOOLS START Name=Utilities KEEP=NO
  public Utilities () throws CGException {
    vdm_init_Utilities();
  }
// ***** VDMTOOLS END Name=Utilities

}
;
