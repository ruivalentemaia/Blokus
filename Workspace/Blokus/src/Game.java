//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2012-12-02 by the VDM++ to JAVA Code Generator
// (v8.1.1b - Thu 30-Oct-2008 14:59:38)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.jdk.*;
// ***** VDMTOOLS END Name=imports



public class Game implements EvaluatePP {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=turn KEEP=NO
  private volatile Object turn = null;
// ***** VDMTOOLS END Name=turn

// ***** VDMTOOLS START Name=nPlayers KEEP=NO
  private volatile Integer nPlayers = null;
// ***** VDMTOOLS END Name=nPlayers

// ***** VDMTOOLS START Name=board KEEP=NO
  private volatile HashMap board = new HashMap();
// ***** VDMTOOLS END Name=board

// ***** VDMTOOLS START Name=tiles KEEP=NO
  private volatile Vector tiles = null;
// ***** VDMTOOLS END Name=tiles

// ***** VDMTOOLS START Name=score KEEP=NO
  private volatile HashMap score = new HashMap();
// ***** VDMTOOLS END Name=score

// ***** VDMTOOLS START Name=boardLimit KEEP=NO
  private volatile Integer boardLimit = null;
// ***** VDMTOOLS END Name=boardLimit

// ***** VDMTOOLS START Name=boardCorners KEEP=NO
  private volatile Vector boardCorners = null;
// ***** VDMTOOLS END Name=boardCorners

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=GameSentinel KEEP=NO
  class GameSentinel extends Sentinel {

    public final int Game = 0;

    public final int getTurn = 1;

    public final int getBoard = 2;

    public final int getScore = 3;

    public final int getTiles = 4;

    public final int placeTile = 5;

    public final int changeTurn = 6;

    public final int updateScore = 7;

    public final int validCorner = 8;

    public final int validPosition = 9;

    public final int placeFirstTile = 10;

    public final int initializeTiles = 11;

    public final int nr_functions = 12;


    public GameSentinel () throws CGException {}


    public GameSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=GameSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new GameSentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_Game KEEP=NO
  private void vdm_init_Game () throws CGException {
    try {

      setSentinel();
      turn = new quotes.blue();
      nPlayers = new Integer(2);
      board = new HashMap();
      tiles = new Vector();
      score = new HashMap();
      boardLimit = new Integer(Utilities.boardSize.intValue() - new Integer(1).intValue());
      Utilities.Pos e_seq_5 = null;
      e_seq_5 = new Utilities.Pos(new Integer(0), new Integer(0));
      boardCorners = new Vector();
      boardCorners.add(e_seq_5);
      Utilities.Pos e_seq_8 = null;
      e_seq_8 = new Utilities.Pos(boardLimit, new Integer(0));
      boardCorners.add(e_seq_8);
      Utilities.Pos e_seq_11 = null;
      e_seq_11 = new Utilities.Pos(new Integer(0), boardLimit);
      boardCorners.add(e_seq_11);
      Utilities.Pos e_seq_14 = null;
      e_seq_14 = new Utilities.Pos(boardLimit, boardLimit);
      boardCorners.add(e_seq_14);
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Game


// ***** VDMTOOLS START Name=Game KEEP=NO
  public Game () throws CGException {
    vdm_init_Game();
  }
// ***** VDMTOOLS END Name=Game


// ***** VDMTOOLS START Name=Game#1|Integer KEEP=NO
  public Game (final Integer n) throws CGException {

    vdm_init_Game();
    {

      nPlayers = UTIL.NumberToInt(UTIL.clone(n));
      {

        HashSet iset_3 = new HashSet();
        iset_3 = new HashSet();
        int ubi_13 = boardLimit.intValue();
        for (int count_14 = new Integer(0).intValue(); count_14 <= ubi_13; count_14++) 
          iset_3.add(new Integer(count_14));
        Integer x = null;
        for (Iterator enm_41 = iset_3.iterator(); enm_41.hasNext(); ) {

          Integer elem_4 = UTIL.NumberToInt(enm_41.next());
          x = elem_4;
          {

            HashSet iset_15 = new HashSet();
            iset_15 = new HashSet();
            int ubi_25 = boardLimit.intValue();
            for (int count_26 = new Integer(0).intValue(); count_26 <= ubi_25; count_26++) 
              iset_15.add(new Integer(count_26));
            Integer y = null;
            for (Iterator enm_40 = iset_15.iterator(); enm_40.hasNext(); ) {

              Integer elem_16 = UTIL.NumberToInt(enm_40.next());
              y = elem_16;
              {

                HashMap rhs_27 = new HashMap();
                HashMap var2_29 = new HashMap();
                Utilities.Pos tmpVar1_30 = null;
                tmpVar1_30 = new Utilities.Pos(x, y);
                var2_29 = new HashMap();
                var2_29.put(tmpVar1_30, new quotes.empty());
                {

                  HashMap m1_38 = (HashMap) board.clone();
                  HashMap m2_39 = var2_29;
                  HashSet com_34 = new HashSet();
                  com_34.addAll(m1_38.keySet());
                  com_34.retainAll(m2_39.keySet());
                  boolean all_applies_35 = true;
                  Object d_36;
                  for (Iterator bb_37 = com_34.iterator(); bb_37.hasNext() && all_applies_35; ) {

                    d_36 = bb_37.next();
                    all_applies_35 = m1_38.get(d_36).equals(m2_39.get(d_36));
                  }
                  if (!all_applies_35) 
                    UTIL.RunTime("Run-Time Error:Map Merge: Incompatible maps");
                  m1_38.putAll(m2_39);
                  rhs_27 = m1_38;
                }
                board = (HashMap) UTIL.clone(rhs_27);
              }
            }
          }
        }
      }
      HashMap rhs_42 = new HashMap();
      rhs_42 = new HashMap();
      rhs_42.put(new quotes.blue(), new Integer(0));
      rhs_42.put(new quotes.yellow(), new Integer(0));
      rhs_42.put(new quotes.red(), new Integer(0));
      rhs_42.put(new quotes.green(), new Integer(0));
      score = (HashMap) UTIL.clone(rhs_42);
      initializeTiles();
    }
  }
// ***** VDMTOOLS END Name=Game#1|Integer


// ***** VDMTOOLS START Name=initializeTiles KEEP=NO
  public void initializeTiles () throws CGException {

    sentinel.entering(((GameSentinel) sentinel).initializeTiles);
    try {

      Vector shape = new Vector();
      Vector corners = new Vector();
      Tile t = null;
      Vector rhs_1 = null;
      Utilities.Pos e_seq_2 = null;
      e_seq_2 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_1 = new Vector();
      rhs_1.add(e_seq_2);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_1));
      Vector rhs_5 = null;
      Utilities.Pos e_seq_6 = null;
      e_seq_6 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_5 = new Vector();
      rhs_5.add(e_seq_6);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_5));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_14 = null;
      Utilities.Pos e_seq_15 = null;
      e_seq_15 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_14 = new Vector();
      rhs_14.add(e_seq_15);
      Utilities.Pos e_seq_18 = null;
      e_seq_18 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_14.add(e_seq_18);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_14));
      Vector rhs_21 = null;
      Utilities.Pos e_seq_22 = null;
      e_seq_22 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_21 = new Vector();
      rhs_21.add(e_seq_22);
      Utilities.Pos e_seq_25 = null;
      e_seq_25 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_21.add(e_seq_25);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_21));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_33 = null;
      Utilities.Pos e_seq_34 = null;
      e_seq_34 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_33 = new Vector();
      rhs_33.add(e_seq_34);
      Utilities.Pos e_seq_37 = null;
      e_seq_37 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_33.add(e_seq_37);
      Utilities.Pos e_seq_40 = null;
      e_seq_40 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_33.add(e_seq_40);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_33));
      Vector rhs_43 = null;
      Utilities.Pos e_seq_44 = null;
      e_seq_44 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_43 = new Vector();
      rhs_43.add(e_seq_44);
      Utilities.Pos e_seq_47 = null;
      e_seq_47 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_43.add(e_seq_47);
      Utilities.Pos e_seq_50 = null;
      e_seq_50 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_43.add(e_seq_50);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_43));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_58 = null;
      Utilities.Pos e_seq_59 = null;
      e_seq_59 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_58 = new Vector();
      rhs_58.add(e_seq_59);
      Utilities.Pos e_seq_62 = null;
      e_seq_62 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_58.add(e_seq_62);
      Utilities.Pos e_seq_65 = null;
      e_seq_65 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_58.add(e_seq_65);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_58));
      Vector rhs_68 = null;
      Utilities.Pos e_seq_69 = null;
      e_seq_69 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_68 = new Vector();
      rhs_68.add(e_seq_69);
      Utilities.Pos e_seq_72 = null;
      e_seq_72 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_68.add(e_seq_72);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_68));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_80 = null;
      Utilities.Pos e_seq_81 = null;
      e_seq_81 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_80 = new Vector();
      rhs_80.add(e_seq_81);
      Utilities.Pos e_seq_84 = null;
      e_seq_84 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_80.add(e_seq_84);
      Utilities.Pos e_seq_87 = null;
      e_seq_87 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_80.add(e_seq_87);
      Utilities.Pos e_seq_90 = null;
      e_seq_90 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_80.add(e_seq_90);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_80));
      Vector rhs_93 = null;
      Utilities.Pos e_seq_94 = null;
      e_seq_94 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_93 = new Vector();
      rhs_93.add(e_seq_94);
      Utilities.Pos e_seq_97 = null;
      e_seq_97 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_93.add(e_seq_97);
      Utilities.Pos e_seq_100 = null;
      e_seq_100 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_93.add(e_seq_100);
      Utilities.Pos e_seq_103 = null;
      e_seq_103 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_93.add(e_seq_103);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_93));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_111 = null;
      Utilities.Pos e_seq_112 = null;
      e_seq_112 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_111 = new Vector();
      rhs_111.add(e_seq_112);
      Utilities.Pos e_seq_115 = null;
      e_seq_115 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_111.add(e_seq_115);
      Utilities.Pos e_seq_118 = null;
      e_seq_118 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_111.add(e_seq_118);
      Utilities.Pos e_seq_121 = null;
      e_seq_121 = new Utilities.Pos(new Integer(2), new Integer(1));
      rhs_111.add(e_seq_121);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_111));
      Vector rhs_124 = null;
      Utilities.Pos e_seq_125 = null;
      e_seq_125 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_124 = new Vector();
      rhs_124.add(e_seq_125);
      Utilities.Pos e_seq_128 = null;
      e_seq_128 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_124.add(e_seq_128);
      Utilities.Pos e_seq_131 = null;
      e_seq_131 = new Utilities.Pos(new Integer(2), new Integer(1));
      rhs_124.add(e_seq_131);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_124));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_139 = null;
      Utilities.Pos e_seq_140 = null;
      e_seq_140 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_139 = new Vector();
      rhs_139.add(e_seq_140);
      Utilities.Pos e_seq_143 = null;
      e_seq_143 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_139.add(e_seq_143);
      Utilities.Pos e_seq_146 = null;
      e_seq_146 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_139.add(e_seq_146);
      Utilities.Pos e_seq_149 = null;
      e_seq_149 = new Utilities.Pos(new Integer(3), new Integer(0));
      rhs_139.add(e_seq_149);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_139));
      Vector rhs_152 = null;
      Utilities.Pos e_seq_153 = null;
      e_seq_153 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_152 = new Vector();
      rhs_152.add(e_seq_153);
      Utilities.Pos e_seq_156 = null;
      e_seq_156 = new Utilities.Pos(new Integer(3), new Integer(0));
      rhs_152.add(e_seq_156);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_152));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_164 = null;
      Utilities.Pos e_seq_165 = null;
      e_seq_165 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_164 = new Vector();
      rhs_164.add(e_seq_165);
      Utilities.Pos e_seq_168 = null;
      e_seq_168 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_164.add(e_seq_168);
      Utilities.Pos e_seq_171 = null;
      e_seq_171 = new Utilities.Pos(new Integer(2), new Integer(1));
      rhs_164.add(e_seq_171);
      Utilities.Pos e_seq_174 = null;
      e_seq_174 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_164.add(e_seq_174);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_164));
      Vector rhs_177 = null;
      Utilities.Pos e_seq_178 = null;
      e_seq_178 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_177 = new Vector();
      rhs_177.add(e_seq_178);
      Utilities.Pos e_seq_181 = null;
      e_seq_181 = new Utilities.Pos(new Integer(2), new Integer(1));
      rhs_177.add(e_seq_181);
      Utilities.Pos e_seq_184 = null;
      e_seq_184 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_177.add(e_seq_184);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_177));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_192 = null;
      Utilities.Pos e_seq_193 = null;
      e_seq_193 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_192 = new Vector();
      rhs_192.add(e_seq_193);
      Utilities.Pos e_seq_196 = null;
      e_seq_196 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_192.add(e_seq_196);
      Utilities.Pos e_seq_199 = null;
      e_seq_199 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_192.add(e_seq_199);
      Utilities.Pos e_seq_202 = null;
      e_seq_202 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_192.add(e_seq_202);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_192));
      Vector rhs_205 = null;
      Utilities.Pos e_seq_206 = null;
      e_seq_206 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_205 = new Vector();
      rhs_205.add(e_seq_206);
      Utilities.Pos e_seq_209 = null;
      e_seq_209 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_205.add(e_seq_209);
      Utilities.Pos e_seq_212 = null;
      e_seq_212 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_205.add(e_seq_212);
      Utilities.Pos e_seq_215 = null;
      e_seq_215 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_205.add(e_seq_215);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_205));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_223 = null;
      Utilities.Pos e_seq_224 = null;
      e_seq_224 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_223 = new Vector();
      rhs_223.add(e_seq_224);
      Utilities.Pos e_seq_227 = null;
      e_seq_227 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_223.add(e_seq_227);
      Utilities.Pos e_seq_230 = null;
      e_seq_230 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_223.add(e_seq_230);
      Utilities.Pos e_seq_233 = null;
      e_seq_233 = new Utilities.Pos(new Integer(2), new Integer(1));
      rhs_223.add(e_seq_233);
      Utilities.Pos e_seq_236 = null;
      e_seq_236 = new Utilities.Pos(new Integer(3), new Integer(1));
      rhs_223.add(e_seq_236);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_223));
      Vector rhs_239 = null;
      Utilities.Pos e_seq_240 = null;
      e_seq_240 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_239 = new Vector();
      rhs_239.add(e_seq_240);
      Utilities.Pos e_seq_243 = null;
      e_seq_243 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_239.add(e_seq_243);
      Utilities.Pos e_seq_246 = null;
      e_seq_246 = new Utilities.Pos(new Integer(3), new Integer(1));
      rhs_239.add(e_seq_246);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_239));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_254 = null;
      Utilities.Pos e_seq_255 = null;
      e_seq_255 = new Utilities.Pos(new Integer(0), new Integer(2));
      rhs_254 = new Vector();
      rhs_254.add(e_seq_255);
      Utilities.Pos e_seq_258 = null;
      e_seq_258 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_254.add(e_seq_258);
      Utilities.Pos e_seq_261 = null;
      e_seq_261 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_254.add(e_seq_261);
      Utilities.Pos e_seq_264 = null;
      e_seq_264 = new Utilities.Pos(new Integer(1), new Integer(2));
      rhs_254.add(e_seq_264);
      Utilities.Pos e_seq_267 = null;
      e_seq_267 = new Utilities.Pos(new Integer(2), new Integer(2));
      rhs_254.add(e_seq_267);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_254));
      Vector rhs_270 = null;
      Utilities.Pos e_seq_271 = null;
      e_seq_271 = new Utilities.Pos(new Integer(0), new Integer(2));
      rhs_270 = new Vector();
      rhs_270.add(e_seq_271);
      Utilities.Pos e_seq_274 = null;
      e_seq_274 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_270.add(e_seq_274);
      Utilities.Pos e_seq_277 = null;
      e_seq_277 = new Utilities.Pos(new Integer(2), new Integer(2));
      rhs_270.add(e_seq_277);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_270));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_285 = null;
      Utilities.Pos e_seq_286 = null;
      e_seq_286 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_285 = new Vector();
      rhs_285.add(e_seq_286);
      Utilities.Pos e_seq_289 = null;
      e_seq_289 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_285.add(e_seq_289);
      Utilities.Pos e_seq_292 = null;
      e_seq_292 = new Utilities.Pos(new Integer(0), new Integer(2));
      rhs_285.add(e_seq_292);
      Utilities.Pos e_seq_295 = null;
      e_seq_295 = new Utilities.Pos(new Integer(1), new Integer(2));
      rhs_285.add(e_seq_295);
      Utilities.Pos e_seq_298 = null;
      e_seq_298 = new Utilities.Pos(new Integer(2), new Integer(2));
      rhs_285.add(e_seq_298);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_285));
      Vector rhs_301 = null;
      Utilities.Pos e_seq_302 = null;
      e_seq_302 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_301 = new Vector();
      rhs_301.add(e_seq_302);
      Utilities.Pos e_seq_305 = null;
      e_seq_305 = new Utilities.Pos(new Integer(0), new Integer(2));
      rhs_301.add(e_seq_305);
      Utilities.Pos e_seq_308 = null;
      e_seq_308 = new Utilities.Pos(new Integer(2), new Integer(2));
      rhs_301.add(e_seq_308);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_301));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_316 = null;
      Utilities.Pos e_seq_317 = null;
      e_seq_317 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_316 = new Vector();
      rhs_316.add(e_seq_317);
      Utilities.Pos e_seq_320 = null;
      e_seq_320 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_316.add(e_seq_320);
      Utilities.Pos e_seq_323 = null;
      e_seq_323 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_316.add(e_seq_323);
      Utilities.Pos e_seq_326 = null;
      e_seq_326 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_316.add(e_seq_326);
      Utilities.Pos e_seq_329 = null;
      e_seq_329 = new Utilities.Pos(new Integer(3), new Integer(0));
      rhs_316.add(e_seq_329);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_316));
      Vector rhs_332 = null;
      Utilities.Pos e_seq_333 = null;
      e_seq_333 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_332 = new Vector();
      rhs_332.add(e_seq_333);
      Utilities.Pos e_seq_336 = null;
      e_seq_336 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_332.add(e_seq_336);
      Utilities.Pos e_seq_339 = null;
      e_seq_339 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_332.add(e_seq_339);
      Utilities.Pos e_seq_342 = null;
      e_seq_342 = new Utilities.Pos(new Integer(3), new Integer(0));
      rhs_332.add(e_seq_342);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_332));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_350 = null;
      Utilities.Pos e_seq_351 = null;
      e_seq_351 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_350 = new Vector();
      rhs_350.add(e_seq_351);
      Utilities.Pos e_seq_354 = null;
      e_seq_354 = new Utilities.Pos(new Integer(0), new Integer(2));
      rhs_350.add(e_seq_354);
      Utilities.Pos e_seq_357 = null;
      e_seq_357 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_350.add(e_seq_357);
      Utilities.Pos e_seq_360 = null;
      e_seq_360 = new Utilities.Pos(new Integer(2), new Integer(1));
      rhs_350.add(e_seq_360);
      Utilities.Pos e_seq_363 = null;
      e_seq_363 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_350.add(e_seq_363);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_350));
      Vector rhs_366 = null;
      Utilities.Pos e_seq_367 = null;
      e_seq_367 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_366 = new Vector();
      rhs_366.add(e_seq_367);
      Utilities.Pos e_seq_370 = null;
      e_seq_370 = new Utilities.Pos(new Integer(0), new Integer(2));
      rhs_366.add(e_seq_370);
      Utilities.Pos e_seq_373 = null;
      e_seq_373 = new Utilities.Pos(new Integer(2), new Integer(1));
      rhs_366.add(e_seq_373);
      Utilities.Pos e_seq_376 = null;
      e_seq_376 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_366.add(e_seq_376);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_366));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_384 = null;
      Utilities.Pos e_seq_385 = null;
      e_seq_385 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_384 = new Vector();
      rhs_384.add(e_seq_385);
      Utilities.Pos e_seq_388 = null;
      e_seq_388 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_384.add(e_seq_388);
      Utilities.Pos e_seq_391 = null;
      e_seq_391 = new Utilities.Pos(new Integer(0), new Integer(2));
      rhs_384.add(e_seq_391);
      Utilities.Pos e_seq_394 = null;
      e_seq_394 = new Utilities.Pos(new Integer(0), new Integer(3));
      rhs_384.add(e_seq_394);
      Utilities.Pos e_seq_397 = null;
      e_seq_397 = new Utilities.Pos(new Integer(0), new Integer(4));
      rhs_384.add(e_seq_397);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_384));
      Vector rhs_400 = null;
      Utilities.Pos e_seq_401 = null;
      e_seq_401 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_400 = new Vector();
      rhs_400.add(e_seq_401);
      Utilities.Pos e_seq_404 = null;
      e_seq_404 = new Utilities.Pos(new Integer(0), new Integer(4));
      rhs_400.add(e_seq_404);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_400));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_412 = null;
      Utilities.Pos e_seq_413 = null;
      e_seq_413 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_412 = new Vector();
      rhs_412.add(e_seq_413);
      Utilities.Pos e_seq_416 = null;
      e_seq_416 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_412.add(e_seq_416);
      Utilities.Pos e_seq_419 = null;
      e_seq_419 = new Utilities.Pos(new Integer(0), new Integer(2));
      rhs_412.add(e_seq_419);
      Utilities.Pos e_seq_422 = null;
      e_seq_422 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_412.add(e_seq_422);
      Utilities.Pos e_seq_425 = null;
      e_seq_425 = new Utilities.Pos(new Integer(1), new Integer(2));
      rhs_412.add(e_seq_425);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_412));
      Vector rhs_428 = null;
      Utilities.Pos e_seq_429 = null;
      e_seq_429 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_428 = new Vector();
      rhs_428.add(e_seq_429);
      Utilities.Pos e_seq_432 = null;
      e_seq_432 = new Utilities.Pos(new Integer(0), new Integer(2));
      rhs_428.add(e_seq_432);
      Utilities.Pos e_seq_435 = null;
      e_seq_435 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_428.add(e_seq_435);
      Utilities.Pos e_seq_438 = null;
      e_seq_438 = new Utilities.Pos(new Integer(1), new Integer(2));
      rhs_428.add(e_seq_438);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_428));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_446 = null;
      Utilities.Pos e_seq_447 = null;
      e_seq_447 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_446 = new Vector();
      rhs_446.add(e_seq_447);
      Utilities.Pos e_seq_450 = null;
      e_seq_450 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_446.add(e_seq_450);
      Utilities.Pos e_seq_453 = null;
      e_seq_453 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_446.add(e_seq_453);
      Utilities.Pos e_seq_456 = null;
      e_seq_456 = new Utilities.Pos(new Integer(0), new Integer(2));
      rhs_446.add(e_seq_456);
      Utilities.Pos e_seq_459 = null;
      e_seq_459 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_446.add(e_seq_459);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_446));
      Vector rhs_462 = null;
      Utilities.Pos e_seq_463 = null;
      e_seq_463 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_462 = new Vector();
      rhs_462.add(e_seq_463);
      Utilities.Pos e_seq_466 = null;
      e_seq_466 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_462.add(e_seq_466);
      Utilities.Pos e_seq_469 = null;
      e_seq_469 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_462.add(e_seq_469);
      Utilities.Pos e_seq_472 = null;
      e_seq_472 = new Utilities.Pos(new Integer(0), new Integer(2));
      rhs_462.add(e_seq_472);
      Utilities.Pos e_seq_475 = null;
      e_seq_475 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_462.add(e_seq_475);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_462));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_483 = null;
      Utilities.Pos e_seq_484 = null;
      e_seq_484 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_483 = new Vector();
      rhs_483.add(e_seq_484);
      Utilities.Pos e_seq_487 = null;
      e_seq_487 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_483.add(e_seq_487);
      Utilities.Pos e_seq_490 = null;
      e_seq_490 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_483.add(e_seq_490);
      Utilities.Pos e_seq_493 = null;
      e_seq_493 = new Utilities.Pos(new Integer(0), new Integer(2));
      rhs_483.add(e_seq_493);
      Utilities.Pos e_seq_496 = null;
      e_seq_496 = new Utilities.Pos(new Integer(1), new Integer(2));
      rhs_483.add(e_seq_496);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_483));
      Vector rhs_499 = null;
      Utilities.Pos e_seq_500 = null;
      e_seq_500 = new Utilities.Pos(new Integer(0), new Integer(0));
      rhs_499 = new Vector();
      rhs_499.add(e_seq_500);
      Utilities.Pos e_seq_503 = null;
      e_seq_503 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_499.add(e_seq_503);
      Utilities.Pos e_seq_506 = null;
      e_seq_506 = new Utilities.Pos(new Integer(0), new Integer(2));
      rhs_499.add(e_seq_506);
      Utilities.Pos e_seq_509 = null;
      e_seq_509 = new Utilities.Pos(new Integer(1), new Integer(2));
      rhs_499.add(e_seq_509);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_499));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_517 = null;
      Utilities.Pos e_seq_518 = null;
      e_seq_518 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_517 = new Vector();
      rhs_517.add(e_seq_518);
      Utilities.Pos e_seq_521 = null;
      e_seq_521 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_517.add(e_seq_521);
      Utilities.Pos e_seq_524 = null;
      e_seq_524 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_517.add(e_seq_524);
      Utilities.Pos e_seq_527 = null;
      e_seq_527 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_517.add(e_seq_527);
      Utilities.Pos e_seq_530 = null;
      e_seq_530 = new Utilities.Pos(new Integer(1), new Integer(2));
      rhs_517.add(e_seq_530);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_517));
      Vector rhs_533 = null;
      Utilities.Pos e_seq_534 = null;
      e_seq_534 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_533 = new Vector();
      rhs_533.add(e_seq_534);
      Utilities.Pos e_seq_537 = null;
      e_seq_537 = new Utilities.Pos(new Integer(2), new Integer(0));
      rhs_533.add(e_seq_537);
      Utilities.Pos e_seq_540 = null;
      e_seq_540 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_533.add(e_seq_540);
      Utilities.Pos e_seq_543 = null;
      e_seq_543 = new Utilities.Pos(new Integer(1), new Integer(2));
      rhs_533.add(e_seq_543);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_533));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_551 = null;
      Utilities.Pos e_seq_552 = null;
      e_seq_552 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_551 = new Vector();
      rhs_551.add(e_seq_552);
      Utilities.Pos e_seq_555 = null;
      e_seq_555 = new Utilities.Pos(new Integer(2), new Integer(1));
      rhs_551.add(e_seq_555);
      Utilities.Pos e_seq_558 = null;
      e_seq_558 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_551.add(e_seq_558);
      Utilities.Pos e_seq_561 = null;
      e_seq_561 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_551.add(e_seq_561);
      Utilities.Pos e_seq_564 = null;
      e_seq_564 = new Utilities.Pos(new Integer(1), new Integer(2));
      rhs_551.add(e_seq_564);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_551));
      Vector rhs_567 = null;
      Utilities.Pos e_seq_568 = null;
      e_seq_568 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_567 = new Vector();
      rhs_567.add(e_seq_568);
      Utilities.Pos e_seq_571 = null;
      e_seq_571 = new Utilities.Pos(new Integer(2), new Integer(1));
      rhs_567.add(e_seq_571);
      Utilities.Pos e_seq_574 = null;
      e_seq_574 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_567.add(e_seq_574);
      Utilities.Pos e_seq_577 = null;
      e_seq_577 = new Utilities.Pos(new Integer(1), new Integer(2));
      rhs_567.add(e_seq_577);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_567));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
      Vector rhs_585 = null;
      Utilities.Pos e_seq_586 = null;
      e_seq_586 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_585 = new Vector();
      rhs_585.add(e_seq_586);
      Utilities.Pos e_seq_589 = null;
      e_seq_589 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_585.add(e_seq_589);
      Utilities.Pos e_seq_592 = null;
      e_seq_592 = new Utilities.Pos(new Integer(1), new Integer(1));
      rhs_585.add(e_seq_592);
      Utilities.Pos e_seq_595 = null;
      e_seq_595 = new Utilities.Pos(new Integer(2), new Integer(1));
      rhs_585.add(e_seq_595);
      Utilities.Pos e_seq_598 = null;
      e_seq_598 = new Utilities.Pos(new Integer(3), new Integer(1));
      rhs_585.add(e_seq_598);
      shape = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_585));
      Vector rhs_601 = null;
      Utilities.Pos e_seq_602 = null;
      e_seq_602 = new Utilities.Pos(new Integer(1), new Integer(0));
      rhs_601 = new Vector();
      rhs_601.add(e_seq_602);
      Utilities.Pos e_seq_605 = null;
      e_seq_605 = new Utilities.Pos(new Integer(0), new Integer(1));
      rhs_601.add(e_seq_605);
      Utilities.Pos e_seq_608 = null;
      e_seq_608 = new Utilities.Pos(new Integer(3), new Integer(1));
      rhs_601.add(e_seq_608);
      corners = (Vector) UTIL.ConvertToList(UTIL.clone(rhs_601));
      t = (Tile) UTIL.clone(new Tile(shape, corners));
      tiles.add(t);
    }
    finally {
      sentinel.leaving(((GameSentinel) sentinel).initializeTiles);
    }
  }
// ***** VDMTOOLS END Name=initializeTiles


// ***** VDMTOOLS START Name=validPosition#3|Tile|Object KEEP=NO
  public Boolean validPosition (final Tile t, final Object c, final Utilities.Pos d) throws CGException {

    sentinel.entering(((GameSentinel) sentinel).validPosition);
    try {

      Boolean cornerFound = new Boolean(false);
      {

        HashSet iset_4 = new HashSet();
        Vector unArg_11 = null;
        unArg_11 = t.getShape();
        HashSet set_12 = new HashSet();
        Enumeration enm_13 = unArg_11.elements();
        while ( enm_13.hasMoreElements())
          set_12.add(enm_13.nextElement());
        iset_4 = set_12;
        Utilities.Pos p = null;
        for (Iterator enm_256 = iset_4.iterator(); enm_256.hasNext(); ) {

          Utilities.Pos elem_5 = (Utilities.Pos) enm_256.next();
          p = elem_5;
          {

            Utilities.Pos newPosition = null;
            Integer tmpVar_14 = null;
            Integer var1_15 = null;
            var1_15 = (p).x;
            Integer var2_17 = null;
            var2_17 = (d).x;
            tmpVar_14 = new Integer(var1_15.intValue() + var2_17.intValue());
            Integer tmpVar_19 = null;
            Integer var1_20 = null;
            var1_20 = (p).y;
            Integer var2_22 = null;
            var2_22 = (d).y;
            tmpVar_19 = new Integer(var1_20.intValue() + var2_22.intValue());
            newPosition = new Utilities.Pos(tmpVar_14, tmpVar_19);
            Utilities.Pos left = null;
            Integer tmpVar_24 = null;
            tmpVar_24 = (newPosition).x;
            Integer tmpVar_26 = null;
            tmpVar_26 = (newPosition).y;
            left = new Utilities.Pos(tmpVar_24, tmpVar_26);
            Utilities.Pos right = null;
            Integer tmpVar_28 = null;
            tmpVar_28 = (newPosition).x;
            Integer tmpVar_30 = null;
            tmpVar_30 = (newPosition).y;
            right = new Utilities.Pos(tmpVar_28, tmpVar_30);
            Utilities.Pos top = null;
            Integer tmpVar_32 = null;
            tmpVar_32 = (newPosition).x;
            Integer tmpVar_34 = null;
            tmpVar_34 = (newPosition).y;
            top = new Utilities.Pos(tmpVar_32, tmpVar_34);
            Utilities.Pos bottom = null;
            Integer tmpVar_36 = null;
            tmpVar_36 = (newPosition).x;
            Integer tmpVar_38 = null;
            tmpVar_38 = (newPosition).y;
            bottom = new Utilities.Pos(tmpVar_36, tmpVar_38);
            Boolean cond_40 = null;
            Integer var1_41 = null;
            Integer var1_42 = null;
            var1_42 = (newPosition).x;
            var1_41 = new Integer(var1_42.intValue() - new Integer(1).intValue());
            cond_40 = new Boolean((var1_41.intValue()) >= (new Integer(0).intValue()));
            if (cond_40.booleanValue()) {

              Utilities.Pos rhs_46 = null;
              Integer tmpVar_47 = null;
              Integer var1_48 = null;
              var1_48 = (newPosition).x;
              tmpVar_47 = new Integer(var1_48.intValue() - new Integer(1).intValue());
              Integer tmpVar_51 = null;
              tmpVar_51 = (newPosition).y;
              rhs_46 = new Utilities.Pos(tmpVar_47, tmpVar_51);
              left = (Utilities.Pos) UTIL.clone(rhs_46);
            }
            Boolean cond_53 = null;
            Integer var1_54 = null;
            Integer var1_55 = null;
            var1_55 = (newPosition).x;
            var1_54 = new Integer(var1_55.intValue() + new Integer(1).intValue());
            cond_53 = new Boolean((var1_54.intValue()) < (Utilities.boardSize.intValue()));
            if (cond_53.booleanValue()) {

              Utilities.Pos rhs_59 = null;
              Integer tmpVar_60 = null;
              Integer var1_61 = null;
              var1_61 = (newPosition).x;
              tmpVar_60 = new Integer(var1_61.intValue() + new Integer(1).intValue());
              Integer tmpVar_64 = null;
              tmpVar_64 = (newPosition).y;
              rhs_59 = new Utilities.Pos(tmpVar_60, tmpVar_64);
              right = (Utilities.Pos) UTIL.clone(rhs_59);
            }
            Boolean cond_66 = null;
            Integer var1_67 = null;
            Integer var1_68 = null;
            var1_68 = (newPosition).y;
            var1_67 = new Integer(var1_68.intValue() + new Integer(1).intValue());
            cond_66 = new Boolean((var1_67.intValue()) < (Utilities.boardSize.intValue()));
            if (cond_66.booleanValue()) {

              Utilities.Pos rhs_72 = null;
              Integer tmpVar_73 = null;
              tmpVar_73 = (newPosition).x;
              Integer tmpVar_75 = null;
              Integer var1_76 = null;
              var1_76 = (newPosition).y;
              tmpVar_75 = new Integer(var1_76.intValue() + new Integer(1).intValue());
              rhs_72 = new Utilities.Pos(tmpVar_73, tmpVar_75);
              top = (Utilities.Pos) UTIL.clone(rhs_72);
            }
            Boolean cond_79 = null;
            Integer var1_80 = null;
            Integer var1_81 = null;
            var1_81 = (newPosition).y;
            var1_80 = new Integer(var1_81.intValue() - new Integer(1).intValue());
            cond_79 = new Boolean((var1_80.intValue()) >= (new Integer(0).intValue()));
            if (cond_79.booleanValue()) {

              Utilities.Pos rhs_85 = null;
              Integer tmpVar_86 = null;
              tmpVar_86 = (newPosition).x;
              Integer tmpVar_88 = null;
              Integer var1_89 = null;
              var1_89 = (newPosition).y;
              tmpVar_88 = new Integer(var1_89.intValue() - new Integer(1).intValue());
              rhs_85 = new Utilities.Pos(tmpVar_86, tmpVar_88);
              bottom = (Utilities.Pos) UTIL.clone(rhs_85);
            }
            Boolean cond_92 = null;
            Boolean var1_93 = null;
            Boolean var1_94 = null;
            Boolean var1_95 = null;
            {
              if (!(var1_95 = new Boolean(!UTIL.equals(board.get(newPosition), new quotes.empty()))).booleanValue()) 
                var1_95 = new Boolean(UTIL.equals(board.get(right), c));
            }
            {
              if (!(var1_94 = var1_95).booleanValue()) 
                var1_94 = new Boolean(UTIL.equals(board.get(left), c));
            }
            {
              if (!(var1_93 = var1_94).booleanValue()) 
                var1_93 = new Boolean(UTIL.equals(board.get(top), c));
            }
            {
              if (!(cond_92 = var1_93).booleanValue()) 
                cond_92 = new Boolean(UTIL.equals(board.get(bottom), c));
            }
            if (cond_92.booleanValue()) 
              return new Boolean(false);
            Boolean cond_122 = null;
            HashSet var2_124 = new HashSet();
            Vector unArg_125 = null;
            unArg_125 = t.getCorners();
            HashSet set_126 = new HashSet();
            Enumeration enm_127 = unArg_125.elements();
            while ( enm_127.hasMoreElements())
              set_126.add(enm_127.nextElement());
            var2_124 = set_126;
            cond_122 = new Boolean(var2_124.contains(p));
            if (cond_122.booleanValue()) {

              Utilities.Pos upperLeft = null;
              Integer tmpVar_128 = null;
              tmpVar_128 = (newPosition).x;
              Integer tmpVar_130 = null;
              tmpVar_130 = (newPosition).y;
              upperLeft = new Utilities.Pos(tmpVar_128, tmpVar_130);
              Utilities.Pos upperRight = null;
              Integer tmpVar_132 = null;
              tmpVar_132 = (newPosition).x;
              Integer tmpVar_134 = null;
              tmpVar_134 = (newPosition).y;
              upperRight = new Utilities.Pos(tmpVar_132, tmpVar_134);
              Utilities.Pos bottomLeft = null;
              Integer tmpVar_136 = null;
              tmpVar_136 = (newPosition).x;
              Integer tmpVar_138 = null;
              tmpVar_138 = (newPosition).y;
              bottomLeft = new Utilities.Pos(tmpVar_136, tmpVar_138);
              Utilities.Pos bottomRight = null;
              Integer tmpVar_140 = null;
              tmpVar_140 = (newPosition).x;
              Integer tmpVar_142 = null;
              tmpVar_142 = (newPosition).y;
              bottomRight = new Utilities.Pos(tmpVar_140, tmpVar_142);
              Boolean cond_144 = null;
              Boolean var1_145 = null;
              Integer var1_146 = null;
              Integer var1_147 = null;
              var1_147 = (newPosition).x;
              var1_146 = new Integer(var1_147.intValue() - new Integer(1).intValue());
              var1_145 = new Boolean((var1_146.intValue()) >= (new Integer(0).intValue()));
              {
                if ((cond_144 = var1_145).booleanValue()) {

                  Boolean var2_151 = null;
                  Integer var1_152 = null;
                  Integer var1_153 = null;
                  var1_153 = (newPosition).y;
                  var1_152 = new Integer(var1_153.intValue() - new Integer(1).intValue());
                  var2_151 = new Boolean((var1_152.intValue()) >= (new Integer(0).intValue()));
                  cond_144 = var2_151;
                }
              }
              if (cond_144.booleanValue()) {

                Utilities.Pos rhs_157 = null;
                Integer tmpVar_158 = null;
                Integer var1_159 = null;
                var1_159 = (newPosition).x;
                tmpVar_158 = new Integer(var1_159.intValue() - new Integer(1).intValue());
                Integer tmpVar_162 = null;
                Integer var1_163 = null;
                var1_163 = (newPosition).y;
                tmpVar_162 = new Integer(var1_163.intValue() - new Integer(1).intValue());
                rhs_157 = new Utilities.Pos(tmpVar_158, tmpVar_162);
                upperLeft = (Utilities.Pos) UTIL.clone(rhs_157);
              }
              Boolean cond_166 = null;
              Boolean var1_167 = null;
              Integer var1_168 = null;
              Integer var1_169 = null;
              var1_169 = (newPosition).x;
              var1_168 = new Integer(var1_169.intValue() + new Integer(1).intValue());
              var1_167 = new Boolean((var1_168.intValue()) < (Utilities.boardSize.intValue()));
              {
                if ((cond_166 = var1_167).booleanValue()) {

                  Boolean var2_173 = null;
                  Integer var1_174 = null;
                  Integer var1_175 = null;
                  var1_175 = (newPosition).y;
                  var1_174 = new Integer(var1_175.intValue() - new Integer(1).intValue());
                  var2_173 = new Boolean((var1_174.intValue()) >= (new Integer(0).intValue()));
                  cond_166 = var2_173;
                }
              }
              if (cond_166.booleanValue()) {

                Utilities.Pos rhs_179 = null;
                Integer tmpVar_180 = null;
                Integer var1_181 = null;
                var1_181 = (newPosition).x;
                tmpVar_180 = new Integer(var1_181.intValue() + new Integer(1).intValue());
                Integer tmpVar_184 = null;
                Integer var1_185 = null;
                var1_185 = (newPosition).y;
                tmpVar_184 = new Integer(var1_185.intValue() - new Integer(1).intValue());
                rhs_179 = new Utilities.Pos(tmpVar_180, tmpVar_184);
                upperRight = (Utilities.Pos) UTIL.clone(rhs_179);
              }
              Boolean cond_188 = null;
              Boolean var1_189 = null;
              Integer var1_190 = null;
              Integer var1_191 = null;
              var1_191 = (newPosition).x;
              var1_190 = new Integer(var1_191.intValue() - new Integer(1).intValue());
              var1_189 = new Boolean((var1_190.intValue()) >= (new Integer(0).intValue()));
              {
                if ((cond_188 = var1_189).booleanValue()) {

                  Boolean var2_195 = null;
                  Integer var1_196 = null;
                  Integer var1_197 = null;
                  var1_197 = (newPosition).y;
                  var1_196 = new Integer(var1_197.intValue() + new Integer(1).intValue());
                  var2_195 = new Boolean((var1_196.intValue()) < (Utilities.boardSize.intValue()));
                  cond_188 = var2_195;
                }
              }
              if (cond_188.booleanValue()) {

                Utilities.Pos rhs_201 = null;
                Integer tmpVar_202 = null;
                Integer var1_203 = null;
                var1_203 = (newPosition).x;
                tmpVar_202 = new Integer(var1_203.intValue() - new Integer(1).intValue());
                Integer tmpVar_206 = null;
                Integer var1_207 = null;
                var1_207 = (newPosition).y;
                tmpVar_206 = new Integer(var1_207.intValue() + new Integer(1).intValue());
                rhs_201 = new Utilities.Pos(tmpVar_202, tmpVar_206);
                bottomLeft = (Utilities.Pos) UTIL.clone(rhs_201);
              }
              Boolean cond_210 = null;
              Boolean var1_211 = null;
              Integer var1_212 = null;
              Integer var1_213 = null;
              var1_213 = (newPosition).x;
              var1_212 = new Integer(var1_213.intValue() + new Integer(1).intValue());
              var1_211 = new Boolean((var1_212.intValue()) < (Utilities.boardSize.intValue()));
              {
                if ((cond_210 = var1_211).booleanValue()) {

                  Boolean var2_217 = null;
                  Integer var1_218 = null;
                  Integer var1_219 = null;
                  var1_219 = (newPosition).y;
                  var1_218 = new Integer(var1_219.intValue() + new Integer(1).intValue());
                  var2_217 = new Boolean((var1_218.intValue()) < (Utilities.boardSize.intValue()));
                  cond_210 = var2_217;
                }
              }
              if (cond_210.booleanValue()) {

                Utilities.Pos rhs_223 = null;
                Integer tmpVar_224 = null;
                Integer var1_225 = null;
                var1_225 = (newPosition).x;
                tmpVar_224 = new Integer(var1_225.intValue() + new Integer(1).intValue());
                Integer tmpVar_228 = null;
                Integer var1_229 = null;
                var1_229 = (newPosition).y;
                tmpVar_228 = new Integer(var1_229.intValue() + new Integer(1).intValue());
                rhs_223 = new Utilities.Pos(tmpVar_224, tmpVar_228);
                bottomRight = (Utilities.Pos) UTIL.clone(rhs_223);
              }
              Boolean cond_232 = null;
              Boolean var1_233 = null;
              Boolean var1_234 = null;
              {
                if (!(var1_234 = new Boolean(UTIL.equals(board.get(upperLeft), c))).booleanValue()) 
                  var1_234 = new Boolean(UTIL.equals(board.get(upperRight), c));
              }
              {
                if (!(var1_233 = var1_234).booleanValue()) 
                  var1_233 = new Boolean(UTIL.equals(board.get(bottomLeft), c));
              }
              {
                if (!(cond_232 = var1_233).booleanValue()) 
                  cond_232 = new Boolean(UTIL.equals(board.get(bottomRight), c));
              }
              if (cond_232.booleanValue()) 
                cornerFound = (Boolean) UTIL.clone(new Boolean(true));
            }
          }
        }
      }
      if (cornerFound.booleanValue()) 
        return new Boolean(true);
      return new Boolean(false);
    }
    finally {
      sentinel.leaving(((GameSentinel) sentinel).validPosition);
    }
  }
// ***** VDMTOOLS END Name=validPosition#3|Tile|Object


// ***** VDMTOOLS START Name=placeTile#3|Tile|Object KEEP=NO
  public Boolean placeTile (final Tile t, final Object c, final Utilities.Pos d) throws CGException {

    if (!this.pre_placeTile(t, c, d).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in placeTile");
    sentinel.entering(((GameSentinel) sentinel).placeTile);
    try {

      {

        HashSet iset_4 = new HashSet();
        Vector unArg_11 = null;
        unArg_11 = t.getShape();
        HashSet set_12 = new HashSet();
        Enumeration enm_13 = unArg_11.elements();
        while ( enm_13.hasMoreElements())
          set_12.add(enm_13.nextElement());
        iset_4 = set_12;
        Utilities.Pos p = null;
        for (Iterator enm_27 = iset_4.iterator(); enm_27.hasNext(); ) {

          Utilities.Pos elem_5 = (Utilities.Pos) enm_27.next();
          p = elem_5;
          {

            Utilities.Pos md_15 = null;
            Integer tmpVar_16 = null;
            Integer var1_17 = null;
            var1_17 = (p).x;
            Integer var2_19 = null;
            var2_19 = (d).x;
            tmpVar_16 = new Integer(var1_17.intValue() + var2_19.intValue());
            Integer tmpVar_21 = null;
            Integer var1_22 = null;
            var1_22 = (p).y;
            Integer var2_24 = null;
            var2_24 = (d).y;
            tmpVar_21 = new Integer(var1_22.intValue() + var2_24.intValue());
            md_15 = new Utilities.Pos(tmpVar_16, tmpVar_21);
            board.put(md_15, c);
          }
        }
      }
      return new Boolean(true);
    }
    finally {
      sentinel.leaving(((GameSentinel) sentinel).placeTile);
    }
  }
// ***** VDMTOOLS END Name=placeTile#3|Tile|Object


// ***** VDMTOOLS START Name=pre_placeTile#3|Tile|Object KEEP=NO
  public Boolean pre_placeTile (final Tile t, final Object c, final Utilities.Pos d) throws CGException {
    return validPosition((Tile) t, c, d);
  }
// ***** VDMTOOLS END Name=pre_placeTile#3|Tile|Object


// ***** VDMTOOLS START Name=validCorner#2|Tile KEEP=NO
  public Boolean validCorner (final Tile t, final Utilities.Pos d) throws CGException {

    sentinel.entering(((GameSentinel) sentinel).validCorner);
    try {

      Vector newShape = new Vector();
      {

        HashSet iset_3 = new HashSet();
        Vector unArg_10 = null;
        unArg_10 = t.getShape();
        HashSet set_11 = new HashSet();
        Enumeration enm_12 = unArg_10.elements();
        while ( enm_12.hasMoreElements())
          set_11.add(enm_12.nextElement());
        iset_3 = set_11;
        Utilities.Pos p = null;
        for (Iterator enm_31 = iset_3.iterator(); enm_31.hasNext(); ) {

          Utilities.Pos elem_4 = (Utilities.Pos) enm_31.next();
          p = elem_4;
          {

            Utilities.Pos newPosition = null;
            Integer tmpVar_13 = null;
            Integer var1_14 = null;
            var1_14 = (p).x;
            Integer var2_16 = null;
            var2_16 = (d).x;
            tmpVar_13 = new Integer(var1_14.intValue() + var2_16.intValue());
            Integer tmpVar_18 = null;
            Integer var1_19 = null;
            var1_19 = (p).y;
            Integer var2_21 = null;
            var2_21 = (d).y;
            tmpVar_18 = new Integer(var1_19.intValue() + var2_21.intValue());
            newPosition = new Utilities.Pos(tmpVar_13, tmpVar_18);
            if (new Boolean(!UTIL.equals(board.get(newPosition), new quotes.empty())).booleanValue()) 
              return new Boolean(false);
            newShape.add(newPosition);
          }
        }
      }
      Boolean cond_32 = null;
      Integer var1_33 = null;
      HashSet unArg_34 = new HashSet();
      HashSet var1_35 = new HashSet();
      HashSet set_37 = new HashSet();
      Enumeration enm_38 = newShape.elements();
      while ( enm_38.hasMoreElements())
        set_37.add(enm_38.nextElement());
      var1_35 = set_37;
      HashSet var2_39 = new HashSet();
      HashSet set_41 = new HashSet();
      Enumeration enm_42 = boardCorners.elements();
      while ( enm_42.hasMoreElements())
        set_41.add(enm_42.nextElement());
      var2_39 = set_41;
      unArg_34 = (HashSet) var1_35.clone();
      unArg_34.retainAll(var2_39);
      var1_33 = new Integer(unArg_34.size());
      cond_32 = new Boolean(var1_33.intValue() == new Integer(1).intValue());
      if (cond_32.booleanValue()) 
        return new Boolean(true);
      return new Boolean(false);
    }
    finally {
      sentinel.leaving(((GameSentinel) sentinel).validCorner);
    }
  }
// ***** VDMTOOLS END Name=validCorner#2|Tile


// ***** VDMTOOLS START Name=placeFirstTile#3|Tile|Object KEEP=NO
  public Boolean placeFirstTile (final Tile t, final Object c, final Utilities.Pos d) throws CGException {

    if (!this.pre_placeFirstTile(t, c, d).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in placeFirstTile");
    sentinel.entering(((GameSentinel) sentinel).placeFirstTile);
    try {

      {

        HashSet iset_4 = new HashSet();
        Vector unArg_11 = null;
        unArg_11 = t.getShape();
        HashSet set_12 = new HashSet();
        Enumeration enm_13 = unArg_11.elements();
        while ( enm_13.hasMoreElements())
          set_12.add(enm_13.nextElement());
        iset_4 = set_12;
        Utilities.Pos p = null;
        for (Iterator enm_27 = iset_4.iterator(); enm_27.hasNext(); ) {

          Utilities.Pos elem_5 = (Utilities.Pos) enm_27.next();
          p = elem_5;
          {

            Utilities.Pos md_15 = null;
            Integer tmpVar_16 = null;
            Integer var1_17 = null;
            var1_17 = (p).x;
            Integer var2_19 = null;
            var2_19 = (d).x;
            tmpVar_16 = new Integer(var1_17.intValue() + var2_19.intValue());
            Integer tmpVar_21 = null;
            Integer var1_22 = null;
            var1_22 = (p).y;
            Integer var2_24 = null;
            var2_24 = (d).y;
            tmpVar_21 = new Integer(var1_22.intValue() + var2_24.intValue());
            md_15 = new Utilities.Pos(tmpVar_16, tmpVar_21);
            board.put(md_15, c);
          }
        }
      }
      return new Boolean(true);
    }
    finally {
      sentinel.leaving(((GameSentinel) sentinel).placeFirstTile);
    }
  }
// ***** VDMTOOLS END Name=placeFirstTile#3|Tile|Object


// ***** VDMTOOLS START Name=pre_placeFirstTile#3|Tile|Object KEEP=NO
  public Boolean pre_placeFirstTile (final Tile t, final Object c, final Utilities.Pos d) throws CGException {
    return validCorner((Tile) t, d);
  }
// ***** VDMTOOLS END Name=pre_placeFirstTile#3|Tile|Object


// ***** VDMTOOLS START Name=updateScore#2|Tile|Object KEEP=NO
  public Boolean updateScore (final Tile t, final Object c) throws CGException {

    sentinel.entering(((GameSentinel) sentinel).updateScore);
    try {

      Integer mr_5 = null;
      Integer var2_9 = null;
      Vector unArg_10 = null;
      unArg_10 = t.getShape();
      var2_9 = new Integer(unArg_10.size());
      mr_5 = new Integer(UTIL.NumberToInt(score.get(c)).intValue() + var2_9.intValue());
      score.put(c, mr_5);
      changeTurn();
      return new Boolean(true);
    }
    finally {
      sentinel.leaving(((GameSentinel) sentinel).updateScore);
    }
  }
// ***** VDMTOOLS END Name=updateScore#2|Tile|Object


// ***** VDMTOOLS START Name=changeTurn KEEP=NO
  public void changeTurn () throws CGException {

    sentinel.entering(((GameSentinel) sentinel).changeTurn);
    try {
      if (new Boolean(UTIL.equals(turn, new quotes.blue())).booleanValue()) 
        turn = UTIL.clone(new quotes.yellow());
      else 
        if (new Boolean(nPlayers.intValue() == new Integer(2).intValue()).booleanValue()) 
          turn = UTIL.clone(new quotes.blue());
        else 
          if (new Boolean(nPlayers.intValue() == new Integer(3).intValue()).booleanValue()) {
            if (new Boolean(UTIL.equals(turn, new quotes.yellow())).booleanValue()) 
              turn = UTIL.clone(new quotes.red());
            else 
              turn = UTIL.clone(new quotes.blue());
          }
          else 
            if (new Boolean(UTIL.equals(turn, new quotes.yellow())).booleanValue()) 
              turn = UTIL.clone(new quotes.red());
            else 
              if (new Boolean(UTIL.equals(turn, new quotes.red())).booleanValue()) 
                turn = UTIL.clone(new quotes.green());
              else 
                turn = UTIL.clone(new quotes.blue());
    }
    finally {
      sentinel.leaving(((GameSentinel) sentinel).changeTurn);
    }
  }
// ***** VDMTOOLS END Name=changeTurn


// ***** VDMTOOLS START Name=getBoard KEEP=NO
  public HashMap getBoard () throws CGException {

    sentinel.entering(((GameSentinel) sentinel).getBoard);
    try {

      HashMap rexpr_1 = new HashMap();
      rexpr_1 = this.board;
      return rexpr_1;
    }
    finally {
      sentinel.leaving(((GameSentinel) sentinel).getBoard);
    }
  }
// ***** VDMTOOLS END Name=getBoard


// ***** VDMTOOLS START Name=getTurn KEEP=NO
  public Object getTurn () throws CGException {

    sentinel.entering(((GameSentinel) sentinel).getTurn);
    try {

      Object rexpr_1 = null;
      rexpr_1 = this.turn;
      return rexpr_1;
    }
    finally {
      sentinel.leaving(((GameSentinel) sentinel).getTurn);
    }
  }
// ***** VDMTOOLS END Name=getTurn


// ***** VDMTOOLS START Name=getTiles KEEP=NO
  public Vector getTiles () throws CGException {

    sentinel.entering(((GameSentinel) sentinel).getTiles);
    try {

      Vector rexpr_1 = null;
      rexpr_1 = this.tiles;
      return rexpr_1;
    }
    finally {
      sentinel.leaving(((GameSentinel) sentinel).getTiles);
    }
  }
// ***** VDMTOOLS END Name=getTiles


// ***** VDMTOOLS START Name=getScore KEEP=NO
  public HashMap getScore () throws CGException {

    sentinel.entering(((GameSentinel) sentinel).getScore);
    try {

      HashMap rexpr_1 = new HashMap();
      rexpr_1 = this.score;
      return rexpr_1;
    }
    finally {
      sentinel.leaving(((GameSentinel) sentinel).getScore);
    }
  }
// ***** VDMTOOLS END Name=getScore

}
;
